{"version":3,"sources":["components/AddCategory.js","helpers/searchApi.js","components/GifGrindItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","imputValue","setImputValue","onSubmit","e","preventDefault","trim","length","catgs","type","value","onChange","target","searchApi","categories","a","url","encodeURI","fetch","json","data","gifs","map","img","id","title","images","downsized_medium","GifGrindItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","category","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAS9C,OACI,sBAAMC,SAPW,SAAEC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC/BR,GAAe,SAAAS,GAAK,OAAMP,GAAN,mBAAqBO,OACzCN,EAAc,MAGd,SACI,uBACIO,KAAM,OACNC,MAAQT,EACRU,SAZc,SAAEP,GAAF,OAASF,EAAeE,EAAEQ,OAAOF,a,+BCLlDG,EAAS,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACfC,EADe,iDACkCC,UAAWH,GAD7C,+DAEUI,MAAOF,GAFjB,8BAEyBG,OAFzB,uBAEbC,EAFa,EAEbA,KAGFC,EAAOD,EAAKE,KAAK,SAAAC,GAEnB,MAAM,CACFC,GAFuDD,EAAnDC,GAGJC,MAHuDF,EAA/CE,MAIRT,IAJuDO,EAAxCG,OAASC,iBAAmBX,QAN9B,kBAadK,GAbc,2CAAH,sDCETO,EAAe,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAClC,OACI,sBAAKa,UAAU,OAAf,UACI,qBAAKC,IAAKd,EAAKe,IAAI,UACnB,4BAAIN,QCFHO,EAAU,SAAC,GAAoB,IAAlBlB,EAAiB,EAAjBA,WAAiB,ECDf,SAAEA,GAAiB,IAAD,EAChBd,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAH6B,mBACnCC,EADmC,KAC5BC,EAD4B,KAe1C,OAVAC,qBAAU,WACNvB,EAAWC,GACNuB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAAEnB,IAEEoB,EDbmBK,CAAczB,GAAhCmB,EAD+B,EAC/BA,QAASb,EADsB,EACtBA,KACjB,OACI,qCACI,oBAAIS,UAAU,qCAAd,SAAoDf,IACnDmB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,aAAf,SAEQT,EAAKE,KAAK,SAAAC,GAAG,OACT,cAAC,EAAD,eAEQA,GADGA,EAAIC,aEV1BgB,EAAe,WAAO,IAAD,EACMxC,mBAAS,CAAC,cADhB,mBACvBc,EADuB,KACXf,EADW,KAE9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEQe,EAAWQ,KAAI,SAAAmB,GAAQ,OACnB,cAAC,EAAD,CAA0B3B,WAAe2B,GAA1BA,U,MCPvCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c76580b5.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n    const [imputValue, setImputValue] = useState('');\n    const handleImputChange = ( e ) => setImputValue( e.target.value );\n    const handleSubmit = ( e ) => {\n        e.preventDefault();\n        if( imputValue.trim().length < 2 ) return;\n        setCategories( catgs => [ imputValue, ...catgs ] );\n        setImputValue('');\n    }\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type =\"text\"\n                value={ imputValue }\n                onChange={ handleImputChange }              \n            /> \n        </form>\n    );\n}\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n}\n","export const searchApi = async( categories ) => { \n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( categories ) }&limit=10&api_key=beSQNThwncZoAsAkDTQroOyG0RaKpe2p`\n    const { data } = await ( await fetch( url ) ).json();\n    //const result = await fetch( url );\n    //const { data }  = await result.json();\n    const gifs = data.map( img => {\n        const { id, title, images:{ downsized_medium:{ url } } } = img;\n        return{\n            id, \n            title,\n            url\n        };\n    });\n    return gifs\n}\n\n","import React from 'react'\n\nexport const GifGrindItem = ({ title, url }) => {\n    return (\n        <div className='card'>\n            <img src={url} alt='Title'/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGrindItem } from './GifGrindItem'\n\nexport const GifGrid = ({ categories }) => {\n    const { loading, data } = useFetchGifs( categories );\n    return (\n        <>\n            <h3 className='animate__animated animate__flipInX'>{categories}</h3>\n            {loading && <p className='animate__animated animate__flash'>Loading</p>}\n            <div className='card-grind'>\n                {\n                    data.map( img =>(\n                        <GifGrindItem \n                            key = {img.id}\n                            {...img}\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { searchApi } from \"../helpers/searchApi\"\n\nexport const useFetchGifs = ( categories ) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n    useEffect(() => {\n        searchApi( categories )\n            .then( imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            });\n    }, [ categories ]) \n\n    return state; // :{ data:[], loading: true } \n}","import React, {useState}from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n    const [categories, setCategories] = useState(['Samurai X']);\n    return (\n        <>\n            <h2>GifExpertApp</h2> \n            <AddCategory setCategories={ setCategories }/>\n            <hr/>\n                {\n                    categories.map(category =>( \n                        <GifGrid key={ category } categories = { category } />\n                    ))\n                }\n        </>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}